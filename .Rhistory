(grade_table = table(grades1))
sd(marks)
range(marks)
min(marks)
max(marks)
quantile(marks)
rank
?runif
# Create Data Frame manually----
c_code <- c('AUCG', 'AUCG', 'AUMP', 'AUMP', 'AUMH', 'AUUP')
dept <- c('Computer Science', 'Management', 'Law', 'Engineering', 'Pharmacy', 'Education')
faculty_count <- c(30, 20, 18, 50, 15, 10)
std_count <- c(600, 400, 350, 1200, 200, 150)
avg_tlr_score <- c(78.5, 74.3, 81.2, 76.7, 80.5, 72.1)
# Dataframe
(univ_data <- data.frame(c_code, dept, faculty_count, std_count, avg_tlr_score))
#Load libraries
library(psych)
install.packages("pastecs")
#Load libraries
library(psych)
install.packages("psych")
#Load libraries
library(psych)
library(pastecs)
library(doBy)
#Basic descriptive statistics
summary(univ_data)
#Basic descriptive statistics
summary(univ_data)
#Basic descriptive statistics
summary(univ_data)
#Apply functions using sapply(), across columns
sapply(univ_data[., c('faculty_count', 'std_count', 'avg_tlr_score')], mean)
#Apply functions using sapply(), across columns
sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], mean)
sapply(univ_data, [c('faculty_count', 'std_count', 'avg_tlr_score')], sd)
sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], sd)
# 1. Basic descriptive statistics
summary(univ_data)
# 2. Apply functions using sapply(), across columns
sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], mean)
sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], sd)
# 3.Detailed descriptive stats using stat.desc()
stats.desc(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')])
# 3.Detailed descriptive stats using stat.desc()
stat.desc(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')])
install.packages("pastecs")
# 3.Detailed descriptive stats using stat.desc()
stat.desc(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')])
# 4. describe() for descriptive stats (from psych package)
describe(univ_data[,c('faculty_count', 'student', 'avg_tlr_score')])
#Load libraries
library(psych)
library(pastecs)
library(doBy)
# 1. Basic descriptive statistics
summary(univ_data)
# 2. Apply functions using sapply(), across columns
sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], mean)
#Finds mean of each numeric column
sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], sd)
# 3.Detailed descriptive stats using stat.desc()
stat.desc(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')])
# 4. describe() for descriptive stats (from psych package)
describe(univ_data[,c('faculty_count', 'student', 'avg_tlr_score')])
# 4. describe() for descriptive stats (from psych package)
describe(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')])
# 5. aggregate : mean of student counts grouped by campus
aggregate(std_count ~ c_code, data = univ_data, FUN = mean)
# 6. Coefficient of variation (CV) manually:
cv_std_count <- (sd(univ_data$std_count)/mean(univ_data$std_count))
# 7. Group wise summary using summaryBy()
summaryBy(std_count + faculty_count + avg_tlr_score ~ Dept, data = univ_data, FUN=c(mean, sd))
# 8. describeBy() for descriptive stats campus-wise
describeBy(univ_data$avg_tlr_score, group = univ_data$c_code)
# Create Data Frame manually----
c_code <- c('AUCG', 'AUCG', 'AUMP', 'AUMP', 'AUMH', 'AUUP')
dept <- c('Computer Science', 'Management', 'Law', 'Engineering', 'Pharmacy', 'Education')
faculty_count <- c(30, 20, 18, 50, 15, 10)
std_count <- c(600, 400, 350, 1200, 200, 150)
avg_tlr_score <- c(78.5, 74.3, 81.2, 76.7, 80.5, 72.1)
# Dataframe
(univ_data <- data.frame(c_code, dept, faculty_count, std_count, avg_tlr_score))
#Load libraries
library(psych)
library(pastecs)
library(doBy)
# 1. Basic descriptive statistics
summary(univ_data)
str(univ_data)
# 2. Apply functions using sapply(), across columns
sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], mean)
# 1. Basic descriptive statistics
summary(univ_data)
#Finds mean of each numeric column
sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], c(sd, mean))
#Finds mean of each numeric column
sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], FUN = c(sd, mean))
#Finds mean of each numeric column
sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], FUN = (sd, mean))
list
#finds standard deviation of each numeric column
?sapply(list, function)
#Finds mean of each numeric column
#sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], FUN = (sd, mean))
#finds standard deviation of each numeric column
?sapply()
#Finds mean of each numeric column
sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], FUN = sd)
#Finds mean of each numeric column
lapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], FUN = sd)
#Finds mean of each numeric column
vapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], FUN = sd)
sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], FUN = function(x) c(sum =sum(x)))
sapply(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')], FUN = function(x) c(sum =sum(x), mean = mean(x), sd = sd(x)))
#includes variance, coefficient of variation, skewness, kurtosis, etc.
?stat.desc
# 3.Detailed descriptive stats using stat.desc()
pastecs::stat.desc(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')])
plot(mtcars$wt, mtcars$mpg)
cov(mtcars$wt, mtcars$mpg)
cor(mtcars$wt, mtcars$mpg)
sqrt(208)
cor(mtcars)
round(cor(mtcars), 2)
plot(mtcars$wt, mtcars$hp)
round(cor(mtcars[, c(wt, mpg, hp)]), 2)
round(cor(mtcars[, c('wt', 'mpg', 'hp')]), 2)
# 4. describe() for descriptive stats (from psych package)
psych::describe(univ_data[, c('faculty_count', 'std_count', 'avg_tlr_score')])
mtcars
model = lm(mpg ~ wt, data = mtcars)
summary(model)
?abline
plot(mtcars$wt, mtcars$mpg)
abline(mtcars$wt, mtcars$mpg)
plot(mtcars$wt, mtcars$mpg)
abline(model)
?predict
predict(model, newdata = data.frame(wt=2.5))
#library----
pacman::p_load(tidyverse, googlesheets4, patchwork)
#Data----
gsid = "1FIB4VOf-8HzHsHo9OZkbniTnIK5Pm9_lcSHDH4Dkzl4"
sheet_names(ss=gsid)
write_sheet(df17b, ss=gsid, sheet='df17')
#Data----
gsid = "1FIB4VOf-8HzHsHo9OZkbniTnIK5Pm9_lcSHDH4Dkzl4"
sheet_names(ss=gsid)
df17 = read_sheet(ss=gsid, sheet = 17, skip = 10)
head(df17)
names(df17)
cn17 = c("Y2025", "Y2024", "institution", 'country', "acad_score", "acad_rank", "emp_score", "emp_rank", "cit_score", "cit_rank", "hi_score", "hi_rank", "irn_score", "irn_rank", "score")
names(df17) = cn17
head(df17)
str(df17)
#data cleaning----
df17$Y2025
df17b <- df17 %>% mutate(Y2025 = str_replace_all(Y2025, '\\+|\\=', ''),Y2024 = str_replace_all(Y2024, '\\+|\\=', ''), acad_rank = str_replace_all(acad_rank, '\\+|\\=', ''), emp_rank = str_replace_all(emp_rank, '\\+|\\=', ''), cit_rank = str_replace_all(cit_rank, '\\+|\\=', ''), hi_rank = str_replace_all(hi_rank, '\\+|\\=', ''), irn_rank = str_replace_all(irn_rank, '\\+|\\=', '')) %>% separate_wider_delim(cols = Y2025, delim = '-', names=c('Y2025L', 'Y2025R'), too_few = "align_start", too_many = "drop", cols_remove = FALSE)  %>% separate_wider_delim(cols = Y2024, delim = '-', names=c('Y2024L', 'Y2024R'), too_few = "align_start", too_many = "drop", cols_remove = FALSE) %>% mutate(Y2025R = if_else(is.na(Y2025R), Y2025L, Y2025R), Y2024R = if_else(is.na(Y2024R), Y2024L, Y2024R)) %>% mutate_at(vars(Y2024L, Y2024R, Y2025L, Y2025R), as.integer) %>% mutate(rank_25 = round((Y2025L + Y2025R)/2), rank_24 = round((Y2024L + Y2024R)/2)) %>% select(-c(Y2025, Y2024, Y2025L, Y2025R, Y2024L, Y2024R))
str(df17b)
head(df17b)
write_sheet(df17b, ss=gsid, sheet='df17')
str(df17b)
df17b[., c(acad_score)]
df17b[, c(acad_score)]
df17b[, c('acad_score')]
names(df17b)
df17b[, c("acad_score","emp_score", "cit_score",    "hi_score",    "irn_score")]
cor(df17b[, c("acad_score","emp_score", "cit_score",    "hi_score",    "irn_score")])
round(cor(df17b[, c("acad_score","emp_score", "cit_score",    "hi_score",    "irn_score")]), 2)
install.packages("GGally")
ggpairs(df17b)
library(GGally)
ggpairs(df17b)
df17c = data.frame( df17b[, c("acad_score","emp_score", "cit_score",    "hi_score",    "irn_score")])
head(df17c)
ggpairs(df17c)
ggpairs(mtcars)
ggpairs(mtcars[c('mpg', 'wt', 'disp')])
ggpairs(mtcars[c('mpg', 'wt', 'disp', 'hp')])
install.packages("corgram")
#Creating Pair plot----
library(corgram)
#Creating Pair plot----
library(corrgram)
install.packages("corrgram")
#Creating Pair plot----
library(corrgram)
corrgram(mtcars[c('mpg', 'wt', 'disp', 'hp')])
ggcorr(mtcars[c('mpg', 'wt', 'disp', 'hp')])
#Best One
library(corrplot)
library(RColorBrewer)
M <-cor(mtcars)
corrplot(M, type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
#library----
pacman::p_load(tidyverse, googlesheets4, patchwork)
#Data----
gsid = "1FIB4VOf-8HzHsHo9OZkbniTnIK5Pm9_lcSHDH4Dkzl4"
sheet_names(ss=gsid)
df17 = read_sheet(ss=gsid, sheet = 17, skip = 10)
head(df17)
names(df17)
cn17 = c("Y2025", "Y2024", "institution", 'country', "acad_score", "acad_rank", "emp_score", "emp_rank", "cit_score", "cit_rank", "hi_score", "hi_rank", "irn_score", "irn_rank", "score")
names(df17) = cn17
head(df17)
str(df17)
#data cleaning----
df17$Y2025
df17b <- df17 %>% mutate(Y2025 = str_replace_all(Y2025, '\\+|\\=', ''),Y2024 = str_replace_all(Y2024, '\\+|\\=', ''), acad_rank = str_replace_all(acad_rank, '\\+|\\=', ''), emp_rank = str_replace_all(emp_rank, '\\+|\\=', ''), cit_rank = str_replace_all(cit_rank, '\\+|\\=', ''), hi_rank = str_replace_all(hi_rank, '\\+|\\=', ''), irn_rank = str_replace_all(irn_rank, '\\+|\\=', '')) %>% separate_wider_delim(cols = Y2025, delim = '-', names=c('Y2025L', 'Y2025R'), too_few = "align_start", too_many = "drop", cols_remove = FALSE)  %>% separate_wider_delim(cols = Y2024, delim = '-', names=c('Y2024L', 'Y2024R'), too_few = "align_start", too_many = "drop", cols_remove = FALSE) %>% mutate(Y2025R = if_else(is.na(Y2025R), Y2025L, Y2025R), Y2024R = if_else(is.na(Y2024R), Y2024L, Y2024R)) %>% mutate_at(vars(Y2024L, Y2024R, Y2025L, Y2025R), as.integer) %>% mutate(rank_25 = round((Y2025L + Y2025R)/2), rank_24 = round((Y2024L + Y2024R)/2)) %>% select(-c(Y2025, Y2024, Y2025L, Y2025R, Y2024L, Y2024R))
str(df17b)
head(df17b)
names(df17b)
round(cor(df17b[, c("acad_score","emp_score", "cit_score",    "hi_score",    "irn_score")]), 2)
#Writing or Storing the Dataframe into a new Goggle sheet----
write_sheet(df17b, ss=gsid, sheet='df17')
#Creating Pair plot----
library(corrgram)
library(GGally)
#Creating new dataframe
df17c = data.frame( df17b[, c("acad_score","emp_score", "cit_score",    "hi_score",    "irn_score")])
head(df17c)
ggpairs(df17c)
ggpairs(mtcars[c('mpg', 'wt', 'disp', 'hp')])
corrgram(mtcars[c('mpg', 'wt', 'disp', 'hp')])
ggcorr(mtcars[c('mpg', 'wt', 'disp', 'hp')])
#Best One
library(corrplot)
library(RColorBrewer)
M <-cor(mtcars)
corrplot(M, type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
#Writing or Storing the Dataframe into a new Goggle sheet----
write_sheet(df17b, ss=gsid, sheet='df17')
#library----
pacman::p_load(tidyverse, googlesheets4, patchwork)
#Data----
gsid = "1FIB4VOf-8HzHsHo9OZkbniTnIK5Pm9_lcSHDH4Dkzl4"
sheet_names(ss=gsid)
#library----
pacman::p_load(tidyverse, googlesheets4, patchwork)
#Data----
gsid = "1FIB4VOf-8HzHsHo9OZkbniTnIK5Pm9_lcSHDH4Dkzl4"
sheet_names(ss=gsid)
sheet_names(ss=gsid)
df17 = read_sheet(ss=gsid, sheet = 17, skip = 10)
head(df17)
names(df17)
cn17 = c("Y2025", "Y2024", "institution", 'country', "acad_score", "acad_rank", "emp_score", "emp_rank", "cit_score", "cit_rank", "hi_score", "hi_rank", "irn_score", "irn_rank", "score")
names(df17) = cn17
head(df17)
str(df17)
#data cleaning----
df17$Y2025
df17b <- df17 %>% mutate(Y2025 = str_replace_all(Y2025, '\\+|\\=', ''),Y2024 = str_replace_all(Y2024, '\\+|\\=', ''), acad_rank = str_replace_all(acad_rank, '\\+|\\=', ''), emp_rank = str_replace_all(emp_rank, '\\+|\\=', ''), cit_rank = str_replace_all(cit_rank, '\\+|\\=', ''), hi_rank = str_replace_all(hi_rank, '\\+|\\=', ''), irn_rank = str_replace_all(irn_rank, '\\+|\\=', '')) %>% separate_wider_delim(cols = Y2025, delim = '-', names=c('Y2025L', 'Y2025R'), too_few = "align_start", too_many = "drop", cols_remove = FALSE)  %>% separate_wider_delim(cols = Y2024, delim = '-', names=c('Y2024L', 'Y2024R'), too_few = "align_start", too_many = "drop", cols_remove = FALSE) %>% mutate(Y2025R = if_else(is.na(Y2025R), Y2025L, Y2025R), Y2024R = if_else(is.na(Y2024R), Y2024L, Y2024R)) %>% mutate_at(vars(Y2024L, Y2024R, Y2025L, Y2025R), as.integer) %>% mutate(rank_25 = round((Y2025L + Y2025R)/2), rank_24 = round((Y2024L + Y2024R)/2)) %>% select(-c(Y2025, Y2024, Y2025L, Y2025R, Y2024L, Y2024R))
str(df17b)
head(df17b)
names(df17b)
round(cor(df17b[, c("acad_score","emp_score", "cit_score",    "hi_score",    "irn_score")]), 2)
#Writing or Storing the Dataframe into a new Goggle sheet----
write_sheet(df17b, ss=gsid, sheet='df17')
#Creating Pair plot----
library(corrgram)
library(GGally)
#Creating new dataframe
df17c = data.frame( df17b[, c("acad_score","emp_score", "cit_score",    "hi_score",    "irn_score")])
head(df17c)
ggpairs(df17c)
ggpairs(mtcars[c('mpg', 'wt', 'disp', 'hp')])
corrgram(mtcars[c('mpg', 'wt', 'disp', 'hp')])
ggcorr(mtcars[c('mpg', 'wt', 'disp', 'hp')])
#Best One
library(corrplot)
library(RColorBrewer)
M <-cor(mtcars)
corrplot(M, type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
usa_ist <- df17b %>%
filter(country == "United States of America") %>%
group_by(institution) %>%
summarise(
avg_acad_score = round(mean(acad_score, na.rm = TRUE)),
avg_emp_score = mean(emp_score, na.rm = TRUE),
avg_cit_score = mean(cit_score, na.rm = TRUE),
avg_hi_score = mean(hi_score, na.rm = TRUE),
avg_irn_score = mean(irn_score, na.rm = TRUE),
avg_score = mean(score, na.rm = TRUE),
.groups = 'drop'  # This will ungroup the data after summarizing
)
#Preparing Bar Graph
ggplot(usa_ist, aes(x = reorder(institution, -avg_acad_score), y = avg_acad_score)) +
geom_bar(stat = "identity", fill = "blue") + labs(title = "Average Academic Scores of USA Institutions", x = "Institution", y = "Average Academic Score") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_text(aes(label = avg_acad_score),
position = position_stack(vjust = 0.8),
hjust = 0.1,  # Adjust horizontal position of text
color = "white", size=3, angle = 90, fontface = "bold") + scale_fill_discrete()
# Preparing Scatter Plot Graph
ggplot(usa_ist, aes(x=avg_acad_score, y=avg_emp_score)) + geom_point(color = "blue") + labs(title = "Academic Score Vs Exmployee Score", x="Avg Academic Score", y="Avg Employee Score") + scale_x_continuous(breaks = seq(25, 100, by=5), labels = seq(25, 100, by=5)) + geom_smooth(method = "lm", se = FALSE)
head(usa_ist)
#Preparing line Chart Graph
ggplot(usa_ist, aes(x = reorder(avg_acad_score, institution), y = institution)) + geom_line(color="blue", size=1) + geom_point(shape=19, color = "black")
#ChatGPT Code
avg_scores <- usa_ist %>%
select(institution, avg_acad_score, avg_emp_score, avg_cit_score, avg_hi_score, avg_irn_score, avg_score) %>%
pivot_longer(cols = -institution, names_to = "metric", values_to = "value")
ggplot(avg_scores, aes(x = institution, y = value, color = metric)) +
geom_line() +
coord_flip() +
labs(title = "Average Scores by Metric for USA Institutions", x = "Institution", y = "Average Score")
head(df17b)
# Line Chart 2
df17b %>% filter(country %in% c('United States of America', 'Singapore', 'United Kingdom', 'China', 'Canada', 'India', 'Japan', 'Australia')) %>% ggplot(., aes(x=country, y=acad_rank, group=rank))
# Line Chart 2
df17b %>% filter(country %in% c('United States of America', 'Singapore', 'United Kingdom', 'China', 'Canada', 'India', 'Japan', 'Australia')) %>% ggplot(., aes(x=country, y=acad_rank, group=rank))
summary(df17b)
str(df17b)
result <- df17b %>% group_by(country) %>% arrange(rank_25)
result
result <- df17b %>% group_by(country)
result
result <- df17b %>% group_by(country) %>% arrange(rank_25)
result
print (n = result)
print (result)
view (result)
result <- df17b %>% arrange(rank_25) %>% group_by(country)
view (result)
result <- df17b %>% group_by(country)  %>% arrange(rank_25)
result <- df17b %>% group_by(country)  %>% order(rank_25)
result <- df17b %>% group_by(country)  %>% order(df17b$rank_25)
result <- df17b %>% group_by(country)  %>% order(result$rank_25)
result <- df17b %>% group_by(country)
view (result)
# March 28, 2025
#Topmost University in QS ranking 2025 from 10 different Countries----
head(df17b)
names(df17b)
df17b %>% group_by(country)
df17b %>% group_by(country) %>% arrange(rank_25)
df17b %>% group_by(country) %>% arrange(rank_25) %>% select(country, institution, rank_25)
df17b %>% group_by(country) %>% arrange(country, rank_25) %>% select(country, institution, rank_25)
df17b %>% group_by(country) %>% arrange(country, rank_25) %>% select(country, institution, rank_25) %>% slice_min(order_by = rank_25, n=1)
df17b %>% group_by(country) %>% arrange(country, rank_25) %>% select(country, institution, rank_25) %>% slice_min(order_by = rank_25, n=1) %>% as.data.frame()
df17b %>% group_by(country) %>% arrange(country, rank_25) %>% select(country, institution, rank_25) %>% slice_min(order_by = rank_25, n=1) %>% as.data.frame()
df17b %>% group_by(country) %>% arrange(country, rank_25) %>% select(country, abbreviate(institution), rank_25) %>% slice_min(order_by = rank_25, n=1) %>% as.data.frame()
?abbreviate()
df17b %>% group_by(country) %>% arrange(country, rank_25) %>% select(country, rank_25) %>% slice_min(order_by = rank_25, n=1) %>% as.data.frame()
df17b %>% group_by(country) %>% arrange(country, rank_25) %>% select(country, rank_25) %>% slice_min(order_by = rank_25, n=1) %>% as.data.frame() %>% filter(rank_25 <10)
df17b %>% arrange(country, rank_25)
df17b %>% arrange(country, rank_25) %>% select(country, rank_25)
result <- df17b %>% group_by(country) %>% arrange(rank_25, country)
view (result)
result <- df17b %>% arrange(country, rank_25)
view (result)
result <- df17b %>% arrange(country, rank_25) %>% group_by(country) %>% slice_min(order_by = rank_25, n=1)
view (result)
result %>% ungroup() %>% arrange(rank_25) %>% select(rank_25, country)
result2 <- result %>% ungroup() %>% arrange(rank_25) %>% select(rank_25, country)
view (result2)
result2 %>% slice_head(10)
result2 %>% slice_head(n=10)
result <- df17b %>% arrange(country, rank_25)
view (result)
result2 <- result %>% ungroup() %>% arrange(rank_25)
view (result2)
result <- df17b %>% arrange(country, rank_25) %>% group_by(country) %>% slice_min(order_by = rank_25, n=1)
result2 <- result %>% ungroup() %>% arrange(rank_25)
view (result2)
result2 %>% slice_head(n=10)
Top10 <- result2 %>% slice_head(n=10)
view(Top10)
?pivot_longer
#Top10 Wide data to Long Data----
top_long <- pivot_longer(Top10, cols = c('acad_score', 'emp_score', 'cit_score', 'hi_score','irn_score'), names_to = category, values_to = value)
#Top10 Wide data to Long Data----
top_long <- pivot_longer(Top10, cols = c('acad_score', 'emp_score', 'cit_score', 'hi_score','irn_score'), names_to = 'category')
top_long
#Top10 Wide data to Long Data----
top_long <- Top10 %>% select(-c('acad_rank', 'emp_rank', 'cit_rank', 'hi_rank', 'irn_rank')) %>% pivot_longer(cols = c('acad_score', 'emp_score', 'cit_score', 'hi_score','irn_score'), names_to = 'category')
head(top_long)
#Top10 Wide data to Long Data----
top_long <- Top10 %>% select(-c('rank_24', 'score', 'acad_rank', 'emp_rank', 'cit_rank', 'hi_rank', 'irn_rank')) %>% pivot_longer(cols = c('acad_score', 'emp_score', 'cit_score', 'hi_score','irn_score'), names_to = 'category')
head(top_long)
head(top_long)
#Stacked Bar Graph ----
top_long %>% ggplot(., aes(fill=category, x=country, y=value)) + geom_bar(position="stack", stat="identity")
#Stacked Bar Graph ----
top_long %>% ggplot(., aes(fill=category, x=country, y=value)) + geom_bar(position="stack", stat="identity") + labs(title = "Tope 1 Institution of each Country and Indicators Score") + geom_text(aes(label = value), position = position_stack(0.5))
#Stacked Bar Graph ----
top_long %>% ggplot(., aes(fill=category, x=country, y=value)) + geom_bar(position="stack", stat="identity", color="black") + labs(title = "Tope 1 Institution of each Country and Indicators Score") + geom_text(aes(label = value), position = position_stack(0.5))
top_long %>% ggplot(., aes(fill=category, x=country, y=value)) + geom_bar(position="stack", stat="identity", color="black") + labs(title = "Tope 1 Institution of each Country and Indicators Score") + geom_text(aes(label = value), position = position_stack(0.5)) + facet_grid(category~., scales='free', space='free')
top_long %>% ggplot(., aes(fill=category, x=country, y=value)) + geom_bar(position="stack", stat="identity", color="black") + labs(title = "Tope 1 Institution of each Country and Indicators Score") + geom_text(aes(label = value), position = position_stack(0.5)) + facet_wrap(category~., scales='free')
top_long %>% ggplot(., aes(fill=category, x=country, y=value)) + geom_bar(position="stack", stat="identity", color="black") + labs(title = "Tope 1 Institution of each Country and Indicators Score") + geom_text(aes(label = value), position = position_stack(0.5)) + facet_wrap(category~., scales='free') + coord_flip()
install.packages("tidytext")
library(tidytext)
top_long %>% ggplot(., aes(fill=category, x= tidytext::reorder_within(country, value, category), y=value)) + geom_bar(position="stack", stat="identity", color="black") + labs(title = "Tope 1 Institution of each Country and Indicators Score") + geom_text(aes(label = value), position = position_stack(0.5)) + facet_wrap(category~., scales='free') + scale_x_reordered()+ coord_flip()
India <- result2 %>% filter(country %in% c('India'))
India
Top10b <- rbind(Top10, India)
view(Top10b)
#Top10 Wide data to Long Data----
top_long <- Top10b %>% select(-c('rank_24', 'score', 'acad_rank', 'emp_rank', 'cit_rank', 'hi_rank', 'irn_rank')) %>% pivot_longer(cols = c('acad_score', 'emp_score', 'cit_score', 'hi_score','irn_score'), names_to = 'category')
#Stacked Bar Graph ----
top_long %>% ggplot(., aes(fill=category, x=country, y=value)) + geom_bar(position="stack", stat="identity", color="black") + labs(title = "Tope 1 Institution of each Country and Indicators Score") + geom_text(aes(label = value), position = position_stack(0.5))
top_long %>% ggplot(., aes(fill=category, x= tidytext::reorder_within(country, value, category), y=value)) + geom_bar(position="stack", stat="identity", color="black") + labs(title = "Tope 1 Institution of each Country and Indicators Score") + geom_text(aes(label = value), position = position_stack(0.5)) + facet_wrap(category~., scales='free') + scale_x_reordered()+ coord_flip()
#Stacked Bar Graph ----
top_long %>% ggplot(., aes(fill=category, x=country, y=value)) + geom_bar(position="stack", stat="identity", color="black") + labs(title = "Tope 1 Institution of each Country and Indicators Score") + geom_text(aes(label = value), position = position_stack(0.5))
?summarise
?group_by
view(top_long)
?summarise
#Summarizing the average of indicators of universities from different countries.
data1 <- top_long %>% arrange(country, rank_25) %>% group_by(country, category)
data1
view(data1)
#Summarizing the average of indicators of universities from different countries.
data1 <- top_long %>% arrange(country, rank_25) %>% group_by(country, category) %>% summarise(avg = mean(value), n=count(distinct(institution)))
#Summarizing the average of indicators of universities from different countries.
data1 <- top_long %>% arrange(country, rank_25) %>% group_by(country, category) %>% summarise(avg = mean(value), n=distinct(institution))
data1 <- top_long %>% arrange(country, rank_25) %>% group_by(country, category)
view(data1)
data1 <- top_long %>% arrange(country, rank_25) %>% group_by(country, institution, category)
view(data1)
#Summarizing the average of indicators of universities from different countries.
data1 <- result2 %>% arrange(country, rank_25) %>% group_by(country, institution, category) %>% summarise(avg = mean(value), n=distinct(institution))
#result_sorted <- result[order(result$rank_25), ]
view (result2)
view(df17b)
#df17b wide to long data----
pivot_longer(df17b, cols = c('acad_score', 'emp_score', 'cit_score', 'hi_score','irn_score'), names_to = 'category')
view(df17b)
#df17b wide to long data----
df17_long <- pivot_longer(df17b, cols = c('acad_score', 'emp_score', 'cit_score', 'hi_score','irn_score'), names_to = 'category')
view(df17_long)
#Summarizing the average of indicators of universities from different countries.
data1 <- df17_long %>% arrange(country, rank_25) %>% group_by(country, institution, category) %>% summarise(avg = mean(value), n=distinct(institution))
data1 <- df17_long %>% arrange(country, rank_25) %>% group_by(country, institution, category
view(data1)
data1 <- df17_long %>% arrange(country, rank_25) %>% group_by(country, institution, category)
view(data1)
#Summarizing the average of indicators of universities from different countries.
data1 <- df17_long %>% arrange(country, rank_25) %>% group_by(country, institution, category) %>% summarise(avg = mean(value), n = n_distinct(institution))
view(data1)
n_distinct(df17_long$institution)
#Summarizing the average of indicators of universities from different countries.
data1 <- df17_long %>% arrange(country, rank_25) %>% group_by(country, institution, category) %>% summarise(avg = mean(value))
head(data1)
#Summarizing the average of indicators of universities from different countries.
data1 <- df17_long %>% arrange(country, rank_25) %>% group_by(country, category) %>% summarise(avg = mean(value))
head(data1)
#Summarizing the average of indicators of universities from different countries.
data1 <- df17_long %>% arrange(country, rank_25) %>% group_by(country, category) %>% summarise(avg = mean(value), n= n_distinct(institution))
view(data1)
(unique(data1$country))
#(unique(data1$country))
data1 %>% distinct(country, n)
#(unique(data1$country))
data1 %>% distinct(country, n) %>% arrange(desc(n))
#(unique(data1$country))
data1 %>% distinct(country, n) %>% arrange(desc(n)) %>% slice_head(n=10)
#(unique(data1$country))
data1 %>% ungroup() %>% distinct(country, n) %>% arrange(desc(n)) %>% slice_head(n=10)
#(unique(data1$country))
data2 <- data1 %>% ungroup() %>% distinct(country, n) %>% arrange(desc(n)) %>% slice_head(n=10)
view(data2)
#(unique(data1$country))
data2 <- data1 %>% ungroup() %>% select(c(category, avg, (distinct(country, n)))) %>% arrange(desc(n)) %>% slice_head(n=10)
#(unique(data1$country))
data2 <- data1 %>% ungroup() %>% distinct(country, n) %>% arrange(desc(n)) %>% slice_head(n=10)
view(data2)
#(unique(data1$country))
data2 <- data1 %>% ungroup() %>% distinct(country, n, category, avg) %>% arrange(desc(n)) %>% slice_head(n=10)
view(data2)
#(unique(data1$country))
data2 <- data1 %>% ungroup() %>% select('country', 'avg', 'institution', 'n') %>% distinct(country, n) %>% arrange(desc(n)) %>% slice_head(n=10)
#(unique(data1$country))
data2 <- data1 %>% ungroup() %>% select('country', 'avg', 'category', 'n') %>% distinct(country, n) %>% arrange(desc(n)) %>% slice_head(n=10)
view(data2)
data2
#(unique(data1$country))
c10 <- data1 %>% ungroup() %>% select('country', 'avg', 'category', 'n') %>% distinct(country, n) %>% arrange(desc(n)) %>% slice_head(n=10) %>% pull(country)
c10
data1 %>% filter(country %in% c10)
data2 <- data1 %>% filter(country %in% c10)
data2 %>% ggplot(., aes(x=country, y=avg, fill = category)) + geom_bar(stat = 'indentity', position = position_stack(0.5))
data2 %>% ggplot(., aes(x=country, y=avg, fill = category)) + geom_bar(stat = 'identity', position = position_stack(0.5))
data2 %>% ggplot(., aes(x=country, y=avg, fill = category)) + geom_bar(stat = 'identity', position = position_stack(0.5)) + facet_wrap(category ~., scales = 'free')
data2 %>% ggplot(., aes(x=country, y=avg, fill = category)) + geom_bar(stat = 'identity', position = position_stack(0.5)) + facet_wrap(category ~.)
data2 %>% ggplot(., aes(x=country, y=avg, fill = category)) + geom_bar(stat = 'identity', position = position_stack(0.5)) + facet_wrap(category ~., scales='free') + coord_flip()
data2 %>% ggplot(., aes(x=country, y=avg, fill = category)) + geom_bar(stat = 'identity', position = position_stack(0.5)) + facet_wrap(category ~., scales='free') + coord_flip() + guides(fill = 'none')
data2
data2 %>% ggplot(., aes(x=country, y=avg, fill = category)) + geom_bar(stat = 'identity', position = position_stack(0.5)) + facet_wrap(category ~., scales='free') + coord_flip() + guides(fill = 'none') + geom_text(aes(label=avg))
data2 %>% ggplot(., aes(x=country, y=avg, fill = category)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + coord_flip() + guides(fill = 'none') + geom_text(aes(label=round(avg)), hjust=0.5)
data2 %>% ggplot(., aes(x=country, y=avg, fill = category)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + coord_flip() + guides(fill = 'none') + geom_text(aes(label=round(avg)), vjust=0.5)
data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = category)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + coord_flip() + guides(fill = 'none') + geom_text(aes(label=round(avg)), vjust=0.5)
data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = category)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + coord_flip() + guides(fill = 'none') + geom_text(aes(label=round(avg)), vjust=0.5)+ scale_x_reordered()
data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + coord_flip() + guides(fill = 'none') + geom_text(aes(label=round(avg)), vjust=0.5)+ scale_x_reordered()
data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + coord_flip() + guides(fill = 'none') + geom_text(aes(label=paste0("N=", n, ' ',round(avg))), vjust=0.5)+ scale_x_reordered()
data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + guides(fill = 'none') + geom_text(aes(label=paste0("N=", n, ' ',round(avg))), vjust=0.5)+ scale_x_reordered() + coord_flip()
data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + guides(fill = 'none') + geom_text(aes(label=paste0("N=", n, ' ',round(avg))), vjust=1)+ scale_x_reordered() + coord_flip()
data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + guides(fill = 'none') + geom_text(aes(label=paste0("N=", n, ' ',round(avg))), vjust= -1)+ scale_x_reordered() + coord_flip()
data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + guides(fill = 'none') + geom_text(aes(label=paste0("N=", n, ' ',round(avg))), vjust=0.5, hjust = 1)+ scale_x_reordered() + coord_flip()
data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + guides(fill = 'none') + geom_text(aes(label=paste0("N=", n, ', ', round(avg))), vjust=0.5, hjust = 2.5)+ scale_x_reordered() + coord_flip()
data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + guides(fill = 'none') + geom_text(aes(label=paste0("N=", n, ', ', round(avg))), vjust=0.5, hjust = 2.5)+ scale_x_reordered() + coord_flip() + labs( title = "Average Indicator Scores of Top 10 Countries", x = "Country", y="Average Scores")
data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + guides(fill = 'none') + geom_text(aes(label=paste0("N=", n, ', ', round(avg))), vjust=0.5, hjust = 2.5)+ scale_x_reordered() + coord_flip() + labs( title = "Average Indicator Scores of Top 10 Countries", x = "Country", y="Average Scores") + theme(plot.title = element_text(hjust=0.5), strip.background = element_rect(fill = "cyan"))
data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + guides(fill = 'none') + geom_text(aes(label=paste0("N=", n, ', ', round(avg))), vjust=0.5, hjust = 2.5)+ scale_x_reordered() + coord_flip() + labs( title = "Average Indicator Scores of Top 10 Countries", x = "Country", y="Average Scores") + theme(plot.title = element_text(hjust=0.5), strip.background = element_rect(fill = "yellow"))
gQS_stack <- data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + guides(fill = 'none') + geom_text(aes(label=paste0("N=", n, ', ', round(avg))), vjust=0.5, hjust = 2.5)+ scale_x_reordered() + coord_flip() + labs( title = "Average Indicator Scores of Top 10 Countries", x = "Country", y="Average Scores") + theme(plot.title = element_text(hjust=0.5), strip.background = element_rect(fill = "yellow"))
gQS_stack
gQS_stack <- data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + guides(fill = 'none') + geom_text(aes(label=paste0("N=", n, ', ', round(avg))), vjust=0.5, hjust = 2.5)+ scale_x_reordered() + coord_flip() + labs( title = "Average Indicator Scores of Top 10 Countries", x = "Country", y="Average Scores") + theme(plot.title = element_text(hjust=0.5), strip.background = element_rect(fill = "yellow", color = "black"))
gQS_stack <- data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + guides(fill = 'none') + geom_text(aes(label=paste0("N=", n, ', ', round(avg))), vjust=0.5, hjust = 2.5)+ scale_x_reordered() + coord_flip() + labs( title = "Average Indicator Scores of Top 10 Countries", x = "Country", y="Average Scores") + theme(plot.title = element_text(hjust=0.5), strip.background = element_rect(fill = "yellow", color = "red"))
gQS_stack <- data2 %>% ggplot(., aes(x=reorder_within(country, avg, category), y=avg, fill = country)) + geom_bar(stat = 'identity') + facet_wrap(category ~., scales='free') + guides(fill = 'none') + geom_text(aes(label=paste0("N=", n, ', ', round(avg))), vjust=0.5, hjust = 2.5)+ scale_x_reordered() + coord_flip() + labs( title = "Average Indicator Scores of Top 10 Countries", x = "Country", y="Average Scores") + theme(plot.title = element_text(hjust=0.5), strip.background = element_rect(fill = "yellow", linewidth = 2, color="red"))

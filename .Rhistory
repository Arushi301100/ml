#Categorical Data
#Creating Nominal Data----
nominal = sample(c('Male', 'Female'), size = 25, replace = T, prob = c(0.6, 0.4))
nominal
table(nominal)
prop.table(table(nominal))
#Creating Ordinal Data of Zomato Ratings----
grades = sample(c('A', 'B', 'C'), size = 25, replace = T, prob = c(0.45, 0.35, 0.2))
table(grades)
prop.table(table(grades))
sort(grades)
?factor
grades1 = factor(grades, ordered = T, levels = c('C', 'B', 'A'))
grades1
sort(grades1)
sort(grades)
grades1 = factor(grades, ordered = T, levels = c('B', 'C', 'A'))
sort(grades1)
#Creating Ordinal Data of Zomato Ratings----
grades = sample(c('A', 'B', 'C', 'D'), size = 25, replace = T, prob = c(0.45, 0.3, 0.15, 0.1))
table(grades)
prop.table(table(grades))
grades1 = factor(grades, ordered = T, levels = c('C', 'B', 'A', 'D'))
grades1
sort(grades1)
length(grades1)
sort(grades1)
sort(grades1)[length(grades1)/2]
sort(grades1)[12]
sort(grades1)[c(12, 13)]
#Creating Continuos data or Ratio scale of Students Marks----
salary = rnorm(25, mean = 70, sd = 4)
salary
#Creating Continuos data or Ratio scale of Students Marks----
marks = round(rnorm(25, mean = 70, sd = 4))
marks
#Creating Discrete data of student ranks----
rank = sample(1:25, size = 25, replace = F)
rank
#mean
(meanrank = mean(rank))
(meanmrks = mean(marks))
(meanmarks = mean(marks))
sort(grades1)
# Median
(med_grades = median(sort(grades1)))
# Median
med_grades = median(sort(grades1))
# Median
grades1= sort(grades1)
med_grades = median(sort(grades1))
med_grades = median(grades1)
med_grades = mode(grades1)
med_grades
# Mode
grades1= sort(grades1)
mode_grades = mode(grades1)
mode_grades
# Median
med_rank = median(rank)
med_rank
med_marks = median(marks)
# Median
(med_rank = median(rank))
(med_marks = median(marks))
marks
table(marks)
sort(table(marks))
grade_table = table(grades1)
# Find mode
mode_grade <- names(grade_table)[which.max(grade_table)]
mode_grade
(grade_table = table(grades1))
sd(marks)
range(marks)
min(marks)
max(marks)
quantile(marks)
rank
?runif
# Create Data Frame manually----
c_code <- c('AUCG', 'AUCG', 'AUMP', 'AUMP', 'AUMH', 'AUUP')
dept <- c('Computer Science', 'Management', 'Law', 'Engineering', 'Pharmacy', 'Education')
faculty_count <- c(30, 20, 18, 50, 15, 10)
std_count <- c(600, 400, 350, 1200, 200, 150)
avg_tlr_score <- c(78.5, 74.3, 81.2, 76.7, 80.5, 72.1)
# Dataframe
(univ_data <- data.frame(c_code, dept, faculty_count, std_count, avg_tlr_score))
#Load libraries
library(psych)
install.packages("pastecs")
#Load libraries
library(psych)
install.packages("psych")
#Load libraries
library(psych)
library(pastecs)
library(doBy)
#Basic descriptive statistics
summary(univ_data)
